def my_func_1(x, y):
    """
    Возвращает x в степени y c использованием оператора **,
    в случае если параметры не являются числами,
    либо параметр y не является целым отрицательным числом предусмотрены исключения

    :param x: Действительное положительное число
    :param y: Целое отрицательное число
    :return:
    """
    try:
        float(x)
        float(y)
        if float(y) < 0 and y[1:].isdigit() and float(y) % 1 == 0 and float(x) > 0:
            return f'{float(x) ** int(y):.4f}'
        else:
            return "аргумент 'y' не является отрицательным или целым числом или аргумент 'x' не положительный"

    except ValueError:
        return 'Одно из значений не является числом. Возведение в степень невозможно'

def my_func_2(x, y):
    """
    Возвращает x в степени y c использованием цикла,
    в случае если параметры не являются числами,
    либо параметр y не является целым отрицательным числом предусмотрены исключения

    :param x: Действительное положительное число
    :param y: Целое отрицательное число
    :return:
    """
    try:
        float(x)
        float(y)
        if float(y) < 0 and y[1:].isdigit() and float(y) % 1 == 0 and float(x) > 0:
            y=int(y)
            x=float(x)
            result=1
            for step in range(abs(y)):
                result=result*x
            return f'{1/result:.4f}'
        else:
            return "аргумент 'y' не является отрицательным или целым числом или аргумент 'x' не положительный"

    except ValueError:
        return 'Одно из значений не является числом. Возведение в степень невозможно'

arg_1=input('Введите первый аргумент: ')
arg_2=input('Введите второй аргумент: ')
print('результат работы функции my_func_1: ', my_func_1(arg_1,arg_2))
print('результат работы функции my_func_2: ', my_func_2(arg_1,arg_2))

